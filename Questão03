#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/wait.h>

#define ARRAY_SIZE 1000
#define NUM_PROCESSES 5
#define SEARCH_NUMBER 42

int search(int *array, int start, int end) {
    int i;
    for (i = start; i < end; i++) {
        if (array[i] == SEARCH_NUMBER) {
            return i;
        }
    }
    return 0;
}

int main() {
    int array[ARRAY_SIZE];
    int i;

    // Preencher o array com valores de 1 a 1000
    for (i = 0; i < ARRAY_SIZE; i++) {
        array[i] = i + 1;
    }

    // Criar os processos filhos
    pid_t pid;
    for (i = 0; i < NUM_PROCESSES; i++) {
        pid = fork();
        if (pid == 0) { // Processo filho
            int start = i * 200;
            int end = start + 200;
            int result = search(array, start, end);

            if (result > 0) {
                printf("Número encontrado na posição %d\n", result);
                exit(i + 1);
            } else {
                exit(0);
            }
        } else if (pid < 0) {
            printf("Falha ao criar o processo filho.\n");
            exit(1);
        }
    }

    // Processo pai espera pelos filhos e obtém o resultado
    int status;
    int process_number = 0;
    for (i = 0; i < NUM_PROCESSES; i++) {
        pid = wait(&status);
        if (WEXITSTATUS(status) > 0) {
            process_number = WEXITSTATUS(status);
            break;
        }
    }

    printf("Número encontrado no processo %d\n", process_number);

    return 0;
}
